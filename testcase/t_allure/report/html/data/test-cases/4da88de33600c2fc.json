{
  "uid" : "4da88de33600c2fc",
  "name" : "用例2",
  "fullName" : "testcase.t_allure.test_allure.TestAllure#test_2",
  "historyId" : "5871aab90d775aefb60bc208ebe8fe37",
  "time" : {
    "start" : 1583737562800,
    "stop" : 1583737562800,
    "duration" : 0
  },
  "description" : "我是备注执行测试用例2的结果是成功",
  "descriptionHtml" : "<p>我是备注执行测试用例2的结果是成功</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: test_2() takes 0 positional arguments but 1 was given",
  "statusTrace" : "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x03756F60>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None) -> \"CallInfo\":\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:229: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:202: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:126: in pytest_runtest_call\n    item.runtest()\nD:\\python\\lib\\site-packages\\_pytest\\python.py:1445: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function test_2>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem):\n        def async_warn():\n            msg = \"async def functions are not natively supported and have been skipped.\\n\"\n            msg += \"You need to install a suitable plugin for your async framework, for example:\\n\"\n            msg += \"  - pytest-asyncio\\n\"\n            msg += \"  - pytest-trio\\n\"\n            msg += \"  - pytest-tornasync\"\n            warnings.warn(PytestUnhandledCoroutineWarning(msg.format(pyfuncitem.nodeid)))\n            skip(msg=\"async def function and no async plugin installed (see warnings)\")\n    \n        testfunction = pyfuncitem.obj\n        if iscoroutinefunction(testfunction) or (\n            sys.version_info >= (3, 6) and inspect.isasyncgenfunction(testfunction)\n        ):\n            async_warn()\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: test_2() takes 0 positional arguments but 1 was given\n\nD:\\python\\lib\\site-packages\\_pytest\\python.py:176: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase.t_allure"
  }, {
    "name" : "suite",
    "value" : "test_allure"
  }, {
    "name" : "subSuite",
    "value" : "TestAllure"
  }, {
    "name" : "host",
    "value" : "DESKTOP-THN35DI"
  }, {
    "name" : "thread",
    "value" : "2356-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.t_allure.test_allure"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "4da88de33600c2fc.json",
  "parameterValues" : [ ]
}